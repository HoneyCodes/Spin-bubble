//////////////////////////////////////////////////////////////////
//
//      D---------C
//      |         |
//      |         |
//      |         |
//      A---------B
//
//
//      y
//      |
//      |
//      o -----x
//     /
//    /
//   z
//
//////////////////////////////////////////////////////////////////

ds = 0.02;                                                      // Setting side discretization length...
x_min = -1.0;                                                   // Setting "x_min"...
x_max = +1.0;                                                   // Setting "x_max"...
y_min = -1.0;                                                   // Setting "y_min"...
y_max = +1.0;                                                   // Setting "y_max"...

// Nodes:
A = 1;                                                          // Setting point "A" tag...
B = 2;                                                          // Setting point "B" tag...
C = 3;                                                          // Setting point "C" tag...
D = 4;                                                          // Setting point "D" tag...
A_H = 5;                                                          // Setting point "A" tag...
B_H = 6;                                                          // Setting point "B" tag...
C_H = 7;                                                          // Setting point "C" tag...
D_H = 8;                                                          // Setting point "D" tag...
A_V = 9;                                                          // Setting point "A" tag...
B_V = 10;                                                          // Setting point "B" tag...
C_V = 11;                                                          // Setting point "C" tag...
D_V = 12;                                                          // Setting point "D" tag...

// Sides:
AB = 1;                                                         // Setting side "AB" tag...
BC = 2;                                                         // Setting side "BC" tag...
CD = 3;                                                         // Setting side "CD" tag...
DA = 4;                                                         // Setting side "DA" tag...
AB_H = 5;                                                         // Setting side "AB" tag...
BC_H = 6;                                                         // Setting side "BC" tag...
CD_H = 7;                                                         // Setting side "CD" tag...
DA_H = 8;                                                         // Setting side "DA" tag...


// Curves:
ABCD_curve = 9;                                                 // Setting curve "ABCD" tag...
ABCD_curve_H = 10;                                                 // Setting curve "ABCD" tag...
ABCD_curve_V = 11;                                                 // Setting curve "ABCD" tag...

// Surfaces:
ABCD_surface = 1;                                               // Setting surface "ABCD" tag...
ABCD_surface_H = 2;                                               // Setting surface "ABCD" tag...
ABCD_surface_V = 3;                                               // Setting surface "ABCD" tag...

// Physical groups:
perimeter = 12;                                                  // Setting "perimeter" tag (physical group)...
x_side = 13;                                                     // Setting "x-side" tag (physical group)...
y_side = 14;                                                    // Setting "y-side" tag (physical group)...
surface = 4;                                                    // Setting "surface" tag (physical group)...
surface_H = 5;                                                    // Setting "surface" tag (physical group)...

Point(A) = {x_min, y_min, 0.0, ds};                             // Setting point "A"...
Point(B) = {x_max, y_min, 0.0, ds};                             // Setting point "B"...
Point(C) = {x_max, y_max, 0.0, ds};                             // Setting point "C"...
Point(D) = {x_min, y_max, 0.0, ds};                             // Setting point "D"...

Point(A_H) = {x_min, y_min, 0.0, ds};                             // Setting point "A"...
Point(B_H) = {x_max, y_min, 0.0, ds};                             // Setting point "B"...
Point(C_H) = {x_max, y_max, 0.0, 2*ds};                             // Setting point "C"...
Point(D_H) = {x_min, y_max, 0.0, 2*ds};                             // Setting point "D"...

Line(AB) = {A, B};                                              // Setting side "AB"...
Line(BC) = {B, C};                                              // Setting side "BC"...
Line(CD) = {C, D};                                              // Setting side "CD"...
Line(DA) = {D, A};                                              // Setting side "AD"...

Line(AB_H) = {A_H, B_H};                                              // Setting side "AB"...
Line(BC_H) = {B_H, C_H};                                              // Setting side "BC"...
Line(CD_H) = {C_H, D_H};                                              // Setting side "CD"...
Line(DA_H) = {D_H, A_H};                                              // Setting side "AD"...

Curve Loop(ABCD_curve) = {AB, BC, CD, DA};                      // Setting perimeter "ABCD"...
Curve Loop(ABCD_curve_H) = {AB_H, BC_H, CD_H, DA_H};                      // Setting perimeter "ABCD"...


Plane Surface(ABCD_surface) = {ABCD_curve};                     // Setting surface "ABCD"...
Plane Surface(ABCD_surface_H) = {ABCD_curve_H};                     // Setting surface "ABCD"...


//k = 7;

/*
For y In {y_min + ds:y_max:ds}
    For x In {x_min + ds:x_max:ds}
        Point(k) = {x, y, 0.0};
        Point(k + 1) = {x + ds, y, 0.0};
        Line(k) = {k, k + 1};
        Line{k} In Surface {ABCD_surface};
        k = k + 2;
    EndFor
EndFor
*/



//Line(AC) = {A, C};
//Line{AC} In Surface {ABCD_surface};

//Line(BD) = {B, D};
//Line{BD} In Surface {ABCD_surface};

Transfinite Surface {ABCD_surface};                             // Applying transfinite algorithm...
Recombine Surface {ABCD_surface};                               // Recombining triangles into quadrangles...

Transfinite Surface {ABCD_surface_H};                             // Applying transfinite algorithm...
Recombine Surface {ABCD_surface_H};                               // Recombining triangles into quadrangles...



Physical Curve(perimeter) = {AB, BC, CD, DA};                   // Setting group: perimeter "ABCD"...
Physical Curve(x_side) = {AB};                                  // Setting group: side "AB"...
Physical Curve(y_side) = {DA};                                  // Setting group: side "AD"...
Physical Surface(surface) = {ABCD_surface};                     // Setting group: surface "ABCD"...
Physical Surface(surface_H) = {ABCD_surface_H};                     // Setting group: surface "ABCD"...

Mesh 3;                                                         // Setting mesh type: quadrangles...

// EZOR 05DEC2021: maybe I can use the points on the physical groups x_side and y_side
// in order to sew the borders.
/*
For y In {y_min + ds:y_max:ds}
    Point(k) = {x_min, y, 0.0};
    Point(k + 1) = {2*x_max, y, 0.0};
    Line(k) = {k, k + 1};
    Line{k} In Surface {ABCD_surface};
    k = k + 2;
EndFor

For x In {x_min + ds:x_max:ds}
    Point(k) = {x, y_min, 0.0};
    Point(k + 1) = {x, y_max, 0.0};
    Line(k) = {k, k + 1};
    Line{k} In Surface {ABCD_surface};
    k = k + 2;
EndFor
*/

Mesh.SaveAll = 1;                                               // Saving all mesh nodes...